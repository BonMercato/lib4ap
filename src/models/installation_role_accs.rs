/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InstallationRoleAccs {
    #[serde(rename = "modTime", skip_serializing_if = "Option::is_none")]
    pub mod_time: Option<i64>,
    #[serde(rename = "checksum", skip_serializing_if = "Option::is_none")]
    pub checksum: Option<String>,
    #[serde(rename = "identifier", skip_serializing_if = "Option::is_none")]
    pub identifier: Option<String>,
    #[serde(rename = "role_accs", skip_serializing_if = "Option::is_none")]
    pub role_accs: Option<crate::models::ModuleObject>,
}

impl InstallationRoleAccs {
    pub fn new() -> InstallationRoleAccs {
        InstallationRoleAccs {
            mod_time: None,
            checksum: None,
            identifier: None,
            role_accs: None,
        }
    }
}


