/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BaseBean {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "module_name", skip_serializing_if = "Option::is_none")]
    pub module_name: Option<String>,
    #[serde(rename = "mod_time", skip_serializing_if = "Option::is_none")]
    pub mod_time: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl BaseBean {
    pub fn new() -> BaseBean {
        BaseBean {
            id: None,
            module_name: None,
            mod_time: None,
            _type: None,
            properties: None,
        }
    }
}


