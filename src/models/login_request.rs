/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LoginRequest {
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "authenticationProvider", skip_serializing_if = "Option::is_none")]
    pub authentication_provider: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "clientType", skip_serializing_if = "Option::is_none")]
    pub client_type: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "embed", skip_serializing_if = "Option::is_none")]
    pub embed: Option<Box<crate::models::JsonNullableListLoginEmbed>>,
    #[serde(rename = "moduleRequestGroups", skip_serializing_if = "Option::is_none")]
    pub module_request_groups: Option<Box<crate::models::JsonNullableListModuleRequestGroup>>,
}

impl LoginRequest {
    pub fn new() -> LoginRequest {
        LoginRequest {
            username: None,
            password: None,
            language: None,
            authentication_provider: None,
            client_type: None,
            token: None,
            embed: None,
            module_request_groups: None,
        }
    }
}


