/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PasswordPolicy {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "minLength", skip_serializing_if = "Option::is_none")]
    pub min_length: Option<i32>,
    #[serde(rename = "complexity", skip_serializing_if = "Option::is_none")]
    pub complexity: Option<String>,
    #[serde(rename = "maxFailedAttempts", skip_serializing_if = "Option::is_none")]
    pub max_failed_attempts: Option<i32>,
    #[serde(rename = "lockTime", skip_serializing_if = "Option::is_none")]
    pub lock_time: Option<i32>,
}

impl PasswordPolicy {
    pub fn new() -> PasswordPolicy {
        PasswordPolicy {
            name: None,
            min_length: None,
            complexity: None,
            max_failed_attempts: None,
            lock_time: None,
        }
    }
}


