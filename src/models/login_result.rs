/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LoginResult {
    #[serde(rename = "userId")]
    pub user_id: String,
    #[serde(rename = "language")]
    pub language: String,
    #[serde(rename = "embedded", skip_serializing_if = "Option::is_none")]
    pub embedded: Option<Box<crate::models::LoginResultEmbedded>>,
}

impl LoginResult {
    pub fn new(user_id: String, language: String) -> LoginResult {
        LoginResult {
            user_id,
            language,
            embedded: None,
        }
    }
}


