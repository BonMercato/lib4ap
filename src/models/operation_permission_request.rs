/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OperationPermissionRequest {
    #[serde(rename = "session", skip_serializing_if = "Option::is_none")]
    pub session: Option<String>,
    #[serde(rename = "module_name", skip_serializing_if = "Option::is_none")]
    pub module_name: Option<String>,
    #[serde(rename = "relation_name", skip_serializing_if = "Option::is_none")]
    pub relation_name: Option<String>,
    #[serde(rename = "ids", skip_serializing_if = "Option::is_none")]
    pub ids: Option<Vec<String>>,
    #[serde(rename = "beanMap", skip_serializing_if = "Option::is_none")]
    pub bean_map: Option<::std::collections::HashMap<String, crate::models::BaseBean>>,
    #[serde(rename = "related_bean_id", skip_serializing_if = "Option::is_none")]
    pub related_bean_id: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Vec<String>>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<Vec<String>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Vec<String>>,
    #[serde(rename = "view", skip_serializing_if = "Option::is_none")]
    pub view: Option<String>,
}

impl OperationPermissionRequest {
    pub fn new() -> OperationPermissionRequest {
        OperationPermissionRequest {
            session: None,
            module_name: None,
            relation_name: None,
            ids: None,
            bean_map: None,
            related_bean_id: None,
            _type: None,
            group: None,
            name: None,
            view: None,
        }
    }
}


