/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProviderListEntry {
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
    #[serde(rename = "targetUrl", skip_serializing_if = "Option::is_none")]
    pub target_url: Option<Box<crate::models::JsonNullableString>>,
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
    #[serde(rename = "chosen", skip_serializing_if = "Option::is_none")]
    pub chosen: Option<Box<crate::models::JsonNullableBoolean>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
}

impl ProviderListEntry {
    pub fn new() -> ProviderListEntry {
        ProviderListEntry {
            key: None,
            order: None,
            target_url: None,
            visible: None,
            chosen: None,
            _type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "username_password")]
    UsernamePassword,
    #[serde(rename = "redirect")]
    Redirect,
    #[serde(rename = "load_token")]
    LoadToken,
    #[serde(rename = "token")]
    Token,
}

impl Default for Type {
    fn default() -> Type {
        Self::UsernamePassword
    }
}

