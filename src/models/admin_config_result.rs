/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AdminConfigResult {
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "supportsMultiple", skip_serializing_if = "Option::is_none")]
    pub supports_multiple: Option<bool>,
    #[serde(rename = "config", skip_serializing_if = "Option::is_none")]
    pub config: Option<serde_json::Value>,
}

impl AdminConfigResult {
    pub fn new() -> AdminConfigResult {
        AdminConfigResult {
            files: None,
            supports_multiple: None,
            config: None,
        }
    }
}


