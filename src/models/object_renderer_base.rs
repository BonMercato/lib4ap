/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObjectRendererBase {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<String>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    #[serde(rename = "labelPlacement", skip_serializing_if = "Option::is_none")]
    pub label_placement: Option<LabelPlacement>,
    #[serde(rename = "logic", skip_serializing_if = "Option::is_none")]
    pub logic: Option<String>,
}

impl ObjectRendererBase {
    pub fn new() -> ObjectRendererBase {
        ObjectRendererBase {
            id: None,
            label: None,
            info: None,
            icon: None,
            label_placement: None,
            logic: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LabelPlacement {
    #[serde(rename = "top")]
    Top,
    #[serde(rename = "left")]
    Left,
    #[serde(rename = "inline")]
    Inline,
    #[serde(rename = "none")]
    None,
}

impl Default for LabelPlacement {
    fn default() -> LabelPlacement {
        Self::Top
    }
}

