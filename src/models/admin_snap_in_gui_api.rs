/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AdminSnapInGuiApi {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "module", skip_serializing_if = "Option::is_none")]
    pub module: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "label_singular", skip_serializing_if = "Option::is_none")]
    pub label_singular: Option<String>,
    #[serde(rename = "label_plural", skip_serializing_if = "Option::is_none")]
    pub label_plural: Option<String>,
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<String>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    #[serde(rename = "layout", skip_serializing_if = "Option::is_none")]
    pub layout: Option<String>,
    #[serde(rename = "information", skip_serializing_if = "Option::is_none")]
    pub information: Option<Box<crate::models::AdminSnapInGuiInformationApi>>,
}

impl AdminSnapInGuiApi {
    pub fn new() -> AdminSnapInGuiApi {
        AdminSnapInGuiApi {
            name: None,
            module: None,
            label: None,
            label_singular: None,
            label_plural: None,
            info: None,
            icon: None,
            layout: None,
            information: None,
        }
    }
}


