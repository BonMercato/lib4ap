/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhookEvent {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "type")]
    pub _type: Type,
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<String>,
    #[serde(rename = "module", skip_serializing_if = "Option::is_none")]
    pub module: Option<String>,
    #[serde(rename = "contentType")]
    pub content_type: ContentType,
    #[serde(rename = "fieldList", skip_serializing_if = "Option::is_none")]
    pub field_list: Option<Vec<String>>,
}

impl WebhookEvent {
    pub fn new(_type: Type, content_type: ContentType) -> WebhookEvent {
        WebhookEvent {
            id: None,
            _type,
            query: None,
            module: None,
            content_type,
            field_list: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "system_reload")]
    SystemReload,
    #[serde(rename = "session_create")]
    SessionCreate,
    #[serde(rename = "moduleobject_create")]
    ModuleobjectCreate,
    #[serde(rename = "moduleobject_modify")]
    ModuleobjectModify,
    #[serde(rename = "moduleobject_delete")]
    ModuleobjectDelete,
}

impl Default for Type {
    fn default() -> Type {
        Self::SystemReload
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentType {
    #[serde(rename = "simple")]
    Simple,
    #[serde(rename = "complete")]
    Complete,
    #[serde(rename = "field_list")]
    FieldList,
    #[serde(rename = "individual_body")]
    IndividualBody,
}

impl Default for ContentType {
    fn default() -> ContentType {
        Self::Simple
    }
}

