/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "objecttype")]
pub enum ApplicationArtifact {
    #[serde(rename="ApplicationWrapper")]
    ApplicationWrapper {
        #[serde(rename = "artifactId")]
        artifact_id: String,
        #[serde(rename = "artifactVersion", skip_serializing_if = "Option::is_none")]
        artifact_version: Option<String>,
        #[serde(rename = "postInstallUrl", skip_serializing_if = "Option::is_none")]
        post_install_url: Option<String>,
        #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
        name: Option<::std::collections::HashMap<String, String>>,
        #[serde(rename = "flavor", skip_serializing_if = "Option::is_none")]
        flavor: Option<String>,
        #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
        author: Option<String>,
        #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
        description: Option<::std::collections::HashMap<String, String>>,
        #[serde(rename = "publishDate", skip_serializing_if = "Option::is_none")]
        publish_date: Option<String>,
        #[serde(rename = "installHook", skip_serializing_if = "Option::is_none")]
        install_hook: Option<String>,
        #[serde(rename = "preInstall", skip_serializing_if = "Option::is_none")]
        pre_install: Option<Box<crate::models::PreInstall>>,
        #[serde(rename = "infoUrl", skip_serializing_if = "Option::is_none")]
        info_url: Option<String>,
        #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
        error: Option<Box<crate::models::ErrorResponseItem>>,
        #[serde(rename = "updates", skip_serializing_if = "Option::is_none")]
        updates: Option<Vec<String>>,
        #[serde(rename = "updating", skip_serializing_if = "Option::is_none")]
        updating: Option<bool>,
        #[serde(rename = "updateStatus", skip_serializing_if = "Option::is_none")]
        update_status: Option<super::application_wrapper::UpdateStatus>,
    },
}




