/*
 * 4ALLPORTAL REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Contact: support@4allportal.net
 * Generated by: https://openapi-generator.tech
 */

use serde::{Serialize, Deserialize};


#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InstallationConfigFile {
    #[serde(rename = "modTime", skip_serializing_if = "Option::is_none")]
    pub mod_time: Option<i64>,
    #[serde(rename = "checksum", skip_serializing_if = "Option::is_none")]
    pub checksum: Option<String>,
    #[serde(rename = "identifier", skip_serializing_if = "Option::is_none")]
    pub identifier: Option<String>,
    #[serde(rename = "fullPath", skip_serializing_if = "Option::is_none")]
    pub full_path: Option<String>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
}

impl InstallationConfigFile {
    pub fn new() -> InstallationConfigFile {
        InstallationConfigFile {
            mod_time: None,
            checksum: None,
            identifier: None,
            full_path: None,
            size: None,
        }
    }
}


